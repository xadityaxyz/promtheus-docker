groups:
  - name: cpu_computation
    rules:
    - record: job:idle_cpu_seconds:avg_per_minute
      expr: avg without(cpu)(rate (node_cpu_seconds_total{mode="idle"}[1m]))

    - record: job:non_idle_cpu_seconds:avg_per_minute
      expr: avg without(cpu, mode)(rate (node_cpu_seconds_total{mode!="idle"}[1m]))


  - name: memory_computation
    rules: 
    - record: job:idle_memory_seconds
      expr: (node_memory_MemFree_bytes/node_memory_MemTotal_bytes)*100

    - record: job:non_idle_memory_seconds
      expr: (1-(node_memory_MemFree_bytes/node_memory_MemTotal_bytes))*100

  - name: node_alert
    rules: 
    - alert: node_exporter_status
      expr: up{job="node_exporter"} == 0
      for: 2m

    - record: job:go_app_resposponse_latency_seconds:rate_1m
      expr: rate(go_app_response_latency_seconds_sum{path=~"/user/.+"}[1m]) / rate(go_app_response_latency_seconds_count{path=~"/user/.+"}[1m])

    - alert: AppLatency_Above5
      expr: job:go_app_resposponse_latency_seconds:rate_1m  >= 5
      for: 2m
      labels:
        sevirity: CRITICAL

    - alert: AppLatency_Above2_Less5
      expr: 2 < job:go_app_resposponse_latency_seconds:rate_1m  < 5
      for: 2m
      labels:
        sevirity: Warning
      annotations:
        summary: "Go App is not running well, and APIs having latency between 2-5 seconds."
        description: "Hi team, this alert sevirity is - {{ $labels.sevirity }}, Alert got raised for instance {{ $labels.instance }}"